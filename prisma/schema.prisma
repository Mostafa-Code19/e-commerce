generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  role           Role      @default(CLIENT)
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  phone_number   String?
  mobile_number  String?   @unique
  mobileVerified Boolean   @default(false)
  melli_code     String?   @unique
  image          String?
  address        String?
  blocked        Boolean   @default(false)
  blocked_for    String?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  last_login     DateTime  @default(now())
  orders         Order[]
  password       String    @default("")
}

enum Role {
  CLIENT
  ADMIN
}

model Order {
  id            String      @id @default(cuid())
  status        Status      @default(PENDING)
  created_at    DateTime    @default(now())
  client        User        @relation(fields: [client_id], references: [id])
  client_id     String
  price         Int
  discount      Int
  payment       Payment
  shipping_cost Int
  tracking_code String?
  items         OrderItem[]
}

enum Status {
  CANCELED
  POSTED
  PREPARING
  PENDING
}

enum Payment {
  DEPOSIT
  CASH
}

model OrderItem {
  id       String          @id @default(cuid())
  order    Order           @relation(fields: [order_id], references: [id])
  order_id String
  item     ProductLocation @relation(fields: [item_id], references: [id])
  item_id  String
  price    Int
  discount Int
  quantity Int
}

model ProductLocation {
  id        String      @id @default(cuid())
  public    Boolean     @default(true)
  product   Product     @relation(fields: [productId], references: [id])
  productId String
  color     Color       @relation(fields: [colorId], references: [id])
  colorId   String      @unique
  size      Size        @relation(fields: [sizeId], references: [id])
  sizeId    String      @unique
  quantity  Int         @default(0)
  price     Int
  discount  Int         @default(0)
  orderItem OrderItem[]
}

model Brand {
  id       String    @id @default(cuid())
  name     String
  products Product[]
}

model Product {
  id              String            @id @default(cuid())
  title           String
  brand           Brand?            @relation(fields: [brandId], references: [id])
  brandId         String?
  description     String?
  productLocation ProductLocation[]
  gallery         Image[]
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
}

model Image {
  id         String   @id @default(cuid())
  src        String   @default("/product/")
  alt        String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Color {
  id              String           @id @default(cuid())
  color           String
  productLocation ProductLocation?
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
}

model Size {
  id              String           @id @default(cuid())
  size            Int
  productLocation ProductLocation?
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
}

model Coupon {
  id         String     @id @default(cuid())
  code       String     @unique
  type       CouponType @default(PERCENTAGE)
  value      Int
  quantity   Int        @default(1)
  created_at DateTime   @default(now())
  expires_at DateTime?
}

enum CouponType {
  PERCENTAGE
  PRICE
}
